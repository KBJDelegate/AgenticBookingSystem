{
  "permissions": {
    "allow": [
      "mcp__backlogs__createProject",
      "mcp__backlogs__createEpic",
      "mcp__backlogs__createFeature",
      "mcp__backlogs__createBacklogItem",
      "Bash(dotnet run:*)",
      "mcp__microsoft-learn__microsoft_docs_search",
      "WebSearch",
      "Bash(dotnet sln add:*)",
      "Bash(dotnet build)",
      "Bash(curl:*)",
      "Bash(dotnet test)",
      "WebFetch(domain:github.com)",
      "Bash(dotnet restore:*)",
      "Bash(dotnet test:*)",
      "WebFetch(domain:www.nuget.org)",
      "Bash(dotnet list package:*)",
      "Bash(dotnet build:*)",
      "Bash(dotnet --version)",
      "Bash(dotnet --list-sdks)",
      "Bash(dotnet clean:*)",
      "Bash(find:*)",
      "Bash(npm install)",
      "Bash(timeout 5 npm run dev)",
      "Bash(npx tsc:*)",
      "Bash(npm run dev:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(kill:*)",
      "Bash(xargs kill:*)",
      "Bash(npm run build:*)",
      "Bash(cat:*)",
      "Bash(node -e \"console.log(require(''crypto'').randomBytes(64).toString(''hex''))\")",
      "Bash(docker-compose up:*)",
      "Bash(npx ts-node:*)",
      "Bash(nc:*)",
      "Bash(node:*)",
      "Bash(npm start)",
      "Bash(fuser:*)",
      "Bash(PORT=3002 npm start)",
      "Bash(PORT=3002 node dist/server.js)",
      "Bash(mkdir:*)",
      "WebFetch(domain:stackoverflow.com)",
      "Bash(claude doctor)",
      "Bash(npm test)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git config:*)",
      "Bash(gh repo create:*)",
      "Bash(git add:*)",
      "Bash(sudo chown:*)",
      "Bash(gh auth:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(TZ:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(gh pr create:*)",
      "Bash(git pull:*)",
      "Bash(chmod:*)",
      "Bash(/dev/null)",
      "Bash(npx tsx:*)",
      "Bash(timeout 30 npm run dev)",
      "Bash(xargs:*)",
      "Read(//tmp/**)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "microsoft-learn"
  ]
}